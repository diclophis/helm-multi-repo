#!/usr/bin/env ruby

#NOTE: will be invoked with the following scheme:
#
#   command certFile keyFile caFile full-URL
#
# The SSL credentials are coming from the repo definition, stored in $HELM_HOME/repository/repositories.yaml.
# plugin is expected to dump the raw content to stdout and report errors on stderr.
#

require 'yaml'
require 'date'

FULL_URL = ARGV[3]

REQ_FILE = File.basename(FULL_URL)
REQ_PACKAGE = REQ_FILE.reverse.split("-", 2).last.reverse

repos_file = File.join(ENV['HELM_PLUGIN_DIR'], "repos")

##NOTE: when helm repo update occurs, the index.yaml is concancated from all upstreams
if REQ_FILE == "index.yaml"
  MULTI_SANS_PROTO = File.dirname(FULL_URL.gsub("multi://", ""))
  File.write(repos_file, MULTI_SANS_PROTO)

  entries = {}

  MULTI_SANS_PROTO.strip.split("/").each do |repo|
    f = File.join(ENV['HELM_HOME'], "repository", "cache", "#{repo}-index.yaml")
    index = YAML.safe_load(File.read(f).gsub("created: ", "created: Z1234-X%%%%X-12 "), [Time, Date])

    index["entries"].each do |repo, versions|
      entries[repo] ||= []
      entries[repo] += versions
    end
  end

  combined_multi_repo_index_yaml = {"apiVersion" => "v1", "entries" => entries}.to_yaml(:canonical => false)
  File.write("/var/tmp/cheese3", combined_multi_repo_index_yaml)
  $stdout.write(combined_multi_repo_index_yaml.gsub("created: Z1234-X%%%%X-12 ", "created: "))

  exit
end

##NOTE: loop each known repo, #TODO: support map to parent conf
##NOTE: there are gotchas with versioning support jumping across repos
File.read(repos_file).strip.split("/").each do |repo|
  tmp = File.join(repo, REQ_PACKAGE)
  bucket = File.join(ENV['HELM_PLUGIN_DIR'], "bucket")
  full_tmp = File.join(bucket, REQ_FILE)

  helm_fetch_cmd = [ENV['HELM_BIN'], "fetch", "-d", bucket, tmp]
  system(*helm_fetch_cmd)

  if File.exists?(full_tmp)
    $stdout.write(File.read(full_tmp))
    exit 0
  end
end

$stderr.write("#{REQ_FILE} not found")

exit 1
